{
  "tags": {
    "@pigs": {
      "name": "@pigs",
      "title": "/pigs",
      "interactionGroups": [
        {
          "protocol": "http",
          "interactions": [
            "http GET /pigs",
            "http POST /pigs",
            "http GET /pigs/{id}",
            "http PUT /pigs/{id}",
            "http DELETE /pigs/{id}"
          ]
        }
      ]
    }
  },
  "info": {
    "title": "Pigs REST API"
  },
  "userTypes": {
    "@pet": {
      "annotation": "A pet.",
      "schema": {
        "content": {
          "tokenType": "object",
          "type": "object",
          "children": [
            {
              "key": "id",
              "tokenType": "reference",
              "type": "@petId",
              "scalarValue": "@petId",
              "optional": false
            },
            {
              "key": "name",
              "tokenType": "string",
              "type": "string",
              "scalarValue": "Tom",
              "optional": false
            },
            {
              "key": "type",
              "tokenType": "string",
              "type": "enum",
              "scalarValue": "PIG",
              "rules": [
                {
                  "key": "enum",
                  "tokenType": "array",
                  "children": [
                    {
                      "tokenType": "string",
                      "scalarValue": "CAT"
                    },
                    {
                      "tokenType": "string",
                      "scalarValue": "DOG"
                    },
                    {
                      "tokenType": "string",
                      "scalarValue": "PIG"
                    }
                  ]
                }
              ],
              "optional": false
            },
            {
              "key": "age",
              "tokenType": "number",
              "type": "integer",
              "scalarValue": "10",
              "rules": [
                {
                  "key": "min",
                  "tokenType": "number",
                  "scalarValue": "0"
                },
                {
                  "key": "max",
                  "tokenType": "number",
                  "scalarValue": "99"
                }
              ],
              "optional": false
            },
            {
              "key": "email",
              "tokenType": "string",
              "type": "email",
              "scalarValue": "tom@pets.com",
              "rules": [
                {
                  "key": "type",
                  "tokenType": "string",
                  "scalarValue": "email"
                }
              ],
              "optional": false
            },
            {
              "key": "uri",
              "tokenType": "string",
              "type": "uri",
              "scalarValue": "http://tom.pets.com",
              "rules": [
                {
                  "key": "type",
                  "tokenType": "string",
                  "scalarValue": "uri"
                }
              ],
              "optional": false
            },
            {
              "key": "birthday",
              "tokenType": "string",
              "type": "date",
              "scalarValue": "2012-01-03",
              "rules": [
                {
                  "key": "type",
                  "tokenType": "string",
                  "scalarValue": "date"
                }
              ],
              "optional": false
            },
            {
              "key": "uuid",
              "tokenType": "string",
              "type": "uuid",
              "scalarValue": "550e8400-e29b-41d4-a716-446655440000",
              "rules": [
                {
                  "key": "type",
                  "tokenType": "string",
                  "scalarValue": "uuid"
                }
              ],
              "optional": false
            }
          ],
          "optional": false
        },
        "notation": "jsight",
        "usedUserTypes": [
          "@petId"
        ]
      }
    },
    "@pig": {
      "annotation": "A pig.",
      "schema": {
        "content": {
          "rules": [
            {
              "key": "allOf",
              "tokenType": "string",
              "scalarValue": "@pet"
            }
          ],
          "tokenType": "object",
          "type": "object",
          "children": [
            {
              "key": "id",
              "tokenType": "reference",
              "type": "@petId",
              "scalarValue": "@petId",
              "inheritedFrom": "@pet",
              "optional": false
            },
            {
              "key": "name",
              "tokenType": "string",
              "type": "string",
              "scalarValue": "Tom",
              "inheritedFrom": "@pet",
              "optional": false
            },
            {
              "key": "type",
              "tokenType": "string",
              "type": "enum",
              "scalarValue": "PIG",
              "inheritedFrom": "@pet",
              "rules": [
                {
                  "key": "enum",
                  "tokenType": "array",
                  "children": [
                    {
                      "tokenType": "string",
                      "scalarValue": "CAT"
                    },
                    {
                      "tokenType": "string",
                      "scalarValue": "DOG"
                    },
                    {
                      "tokenType": "string",
                      "scalarValue": "PIG"
                    }
                  ]
                }
              ],
              "optional": false
            },
            {
              "key": "age",
              "tokenType": "number",
              "type": "integer",
              "scalarValue": "10",
              "inheritedFrom": "@pet",
              "rules": [
                {
                  "key": "min",
                  "tokenType": "number",
                  "scalarValue": "0"
                },
                {
                  "key": "max",
                  "tokenType": "number",
                  "scalarValue": "99"
                }
              ],
              "optional": false
            },
            {
              "key": "email",
              "tokenType": "string",
              "type": "email",
              "scalarValue": "tom@pets.com",
              "inheritedFrom": "@pet",
              "rules": [
                {
                  "key": "type",
                  "tokenType": "string",
                  "scalarValue": "email"
                }
              ],
              "optional": false
            },
            {
              "key": "uri",
              "tokenType": "string",
              "type": "uri",
              "scalarValue": "http://tom.pets.com",
              "inheritedFrom": "@pet",
              "rules": [
                {
                  "key": "type",
                  "tokenType": "string",
                  "scalarValue": "uri"
                }
              ],
              "optional": false
            },
            {
              "key": "birthday",
              "tokenType": "string",
              "type": "date",
              "scalarValue": "2012-01-03",
              "inheritedFrom": "@pet",
              "rules": [
                {
                  "key": "type",
                  "tokenType": "string",
                  "scalarValue": "date"
                }
              ],
              "optional": false
            },
            {
              "key": "uuid",
              "tokenType": "string",
              "type": "uuid",
              "scalarValue": "550e8400-e29b-41d4-a716-446655440000",
              "inheritedFrom": "@pet",
              "rules": [
                {
                  "key": "type",
                  "tokenType": "string",
                  "scalarValue": "uuid"
                }
              ],
              "optional": false
            },
            {
              "key": "temperature",
              "tokenType": "number",
              "type": "decimal",
              "scalarValue": "35.6",
              "rules": [
                {
                  "key": "precision",
                  "tokenType": "number",
                  "scalarValue": "1"
                },
                {
                  "key": "nullable",
                  "tokenType": "boolean",
                  "scalarValue": "true"
                }
              ],
              "optional": false
            },
            {
              "key": "pigSize",
              "tokenType": "string",
              "type": "@pigSize",
              "scalarValue": "S",
              "rules": [
                {
                  "key": "type",
                  "tokenType": "string",
                  "scalarValue": "@pigSize"
                }
              ],
              "optional": false
            },
            {
              "key": "lastWashTime",
              "tokenType": "string",
              "type": "datetime",
              "scalarValue": "2021-01-02T15:04:05+03:00",
              "rules": [
                {
                  "key": "type",
                  "tokenType": "string",
                  "scalarValue": "datetime"
                }
              ],
              "optional": false
            },
            {
              "rules": [
                {
                  "key": "additionalProperties",
                  "tokenType": "string",
                  "scalarValue": "string"
                }
              ],
              "key": "additionalData",
              "tokenType": "object",
              "type": "object",
              "children": [
                {
                  "key": "key",
                  "tokenType": "string",
                  "type": "string",
                  "scalarValue": "value",
                  "optional": false
                }
              ],
              "optional": false
            }
          ],
          "optional": false
        },
        "notation": "jsight",
        "usedUserTypes": [
          "@pet",
          "@pigSize"
        ]
      }
    },
    "@pigSize": {
      "schema": {
        "content": {
          "tokenType": "string",
          "type": "enum",
          "scalarValue": "S",
          "rules": [
            {
              "key": "enum",
              "tokenType": "array",
              "children": [
                {
                  "tokenType": "string",
                  "scalarValue": "XXS"
                },
                {
                  "tokenType": "string",
                  "scalarValue": "XS"
                },
                {
                  "tokenType": "string",
                  "scalarValue": "S"
                },
                {
                  "tokenType": "string",
                  "scalarValue": "M"
                },
                {
                  "tokenType": "string",
                  "scalarValue": "L"
                },
                {
                  "tokenType": "string",
                  "scalarValue": "XL"
                },
                {
                  "tokenType": "string",
                  "scalarValue": "XXL"
                }
              ]
            }
          ],
          "optional": false
        },
        "notation": "jsight"
      }
    },
    "@petId": {
      "schema": {
        "content": {
          "tokenType": "string",
          "type": "string",
          "scalarValue": "GOAT-12345",
          "rules": [
            {
              "key": "regex",
              "tokenType": "string",
              "scalarValue": "^[A-Z]+-\\d+$"
            },
            {
              "key": "minLength",
              "tokenType": "number",
              "scalarValue": "3"
            },
            {
              "key": "maxLength",
              "tokenType": "number",
              "scalarValue": "255"
            }
          ],
          "optional": false
        },
        "notation": "jsight"
      }
    },
    "@petName": {
      "schema": {
        "content": "^[A-Z][a-z]*( [A-Z][a-z]*)*$",
        "notation": "regex"
      }
    },
    "@error": {
      "annotation": "A common error response.",
      "schema": {
        "content": {
          "tokenType": "object",
          "type": "object",
          "children": [
            {
              "key": "code",
              "tokenType": "number",
              "type": "integer",
              "scalarValue": "12",
              "optional": false
            },
            {
              "key": "message",
              "tokenType": "string",
              "type": "string",
              "scalarValue": "Something bad had happened on the server...",
              "optional": false
            }
          ],
          "optional": false
        },
        "notation": "jsight"
      }
    }
  },
  "interactions": {
    "http GET /pigs": {
      "id": "http GET /pigs",
      "protocol": "http",
      "path": "/pigs",
      "tags": [
        "@pigs"
      ],
      "annotation": "Get the list of all pigs.",
      "responses": [
        {
          "code": "200",
          "annotation": "List of pigs.",
          "body": {
            "format": "json",
            "schema": {
              "content": {
                "tokenType": "array",
                "type": "array",
                "children": [
                  {
                    "tokenType": "reference",
                    "type": "@pig",
                    "scalarValue": "@pig",
                    "optional": true
                  }
                ],
                "optional": false
              },
              "notation": "jsight",
              "usedUserTypes": [
                "@pig"
              ]
            }
          }
        }
      ],
      "httpMethod": "GET"
    },
    "http POST /pigs": {
      "id": "http POST /pigs",
      "protocol": "http",
      "path": "/pigs",
      "tags": [
        "@pigs"
      ],
      "annotation": "Create a new pig.",
      "request": {
        "body": {
          "format": "json",
          "schema": {
            "content": {
              "tokenType": "reference",
              "type": "@pig",
              "scalarValue": "@pig",
              "optional": false
            },
            "notation": "jsight",
            "usedUserTypes": [
              "@pig"
            ]
          }
        }
      },
      "responses": [
        {
          "code": "200",
          "annotation": "Pig created.",
          "body": {
            "format": "json",
            "schema": {
              "content": {
                "tokenType": "reference",
                "type": "@pig",
                "scalarValue": "@pig",
                "optional": false
              },
              "notation": "jsight",
              "usedUserTypes": [
                "@pig"
              ]
            }
          }
        },
        {
          "code": "409",
          "annotation": "Pig not created.",
          "body": {
            "format": "json",
            "schema": {
              "content": {
                "tokenType": "reference",
                "type": "@error",
                "scalarValue": "@error",
                "optional": false
              },
              "notation": "jsight",
              "usedUserTypes": [
                "@error"
              ]
            }
          }
        }
      ],
      "httpMethod": "POST"
    },
    "http GET /pigs/{id}": {
      "id": "http GET /pigs/{id}",
      "protocol": "http",
      "path": "/pigs/{id}",
      "tags": [
        "@pigs"
      ],
      "pathVariables": {
        "schema": {
          "content": {
            "tokenType": "object",
            "type": "object",
            "children": [
              {
                "note": "A pig’s id.",
                "key": "id",
                "tokenType": "string",
                "type": "@petId",
                "scalarValue": "PIG-123",
                "rules": [
                  {
                    "key": "type",
                    "tokenType": "string",
                    "scalarValue": "@petId"
                  }
                ],
                "optional": false
              }
            ],
            "optional": false
          },
          "notation": "jsight",
          "usedUserTypes": [
            "@petId"
          ]
        }
      },
      "annotation": "Get a pig by its id.",
      "responses": [
        {
          "code": "200",
          "annotation": "A pig.",
          "body": {
            "format": "json",
            "schema": {
              "content": {
                "tokenType": "reference",
                "type": "@pig",
                "scalarValue": "@pig",
                "optional": false
              },
              "notation": "jsight",
              "usedUserTypes": [
                "@pig"
              ]
            }
          }
        },
        {
          "code": "404",
          "annotation": "Pig not found.",
          "body": {
            "format": "json",
            "schema": {
              "content": {
                "tokenType": "reference",
                "type": "@error",
                "scalarValue": "@error",
                "optional": false
              },
              "notation": "jsight",
              "usedUserTypes": [
                "@error"
              ]
            }
          }
        }
      ],
      "httpMethod": "GET"
    },
    "http PUT /pigs/{id}": {
      "id": "http PUT /pigs/{id}",
      "protocol": "http",
      "path": "/pigs/{id}",
      "tags": [
        "@pigs"
      ],
      "pathVariables": {
        "schema": {
          "content": {
            "tokenType": "object",
            "type": "object",
            "children": [
              {
                "note": "A pig’s id.",
                "key": "id",
                "tokenType": "string",
                "type": "@petId",
                "scalarValue": "PIG-123",
                "rules": [
                  {
                    "key": "type",
                    "tokenType": "string",
                    "scalarValue": "@petId"
                  }
                ],
                "optional": false
              }
            ],
            "optional": false
          },
          "notation": "jsight",
          "usedUserTypes": [
            "@petId"
          ]
        }
      },
      "annotation": "Change a pig by its id.",
      "request": {
        "body": {
          "format": "json",
          "schema": {
            "content": {
              "tokenType": "reference",
              "type": "@pig",
              "scalarValue": "@pig",
              "optional": false
            },
            "notation": "jsight",
            "usedUserTypes": [
              "@pig"
            ]
          }
        }
      },
      "responses": [
        {
          "code": "200",
          "annotation": "Pig updated.",
          "body": {
            "format": "json",
            "schema": {
              "content": {
                "tokenType": "reference",
                "type": "@pig",
                "scalarValue": "@pig",
                "optional": false
              },
              "notation": "jsight",
              "usedUserTypes": [
                "@pig"
              ]
            }
          }
        },
        {
          "code": "404",
          "annotation": "Pig not found.",
          "body": {
            "format": "json",
            "schema": {
              "content": {
                "tokenType": "reference",
                "type": "@error",
                "scalarValue": "@error",
                "optional": false
              },
              "notation": "jsight",
              "usedUserTypes": [
                "@error"
              ]
            }
          }
        },
        {
          "code": "409",
          "annotation": "Error.",
          "body": {
            "format": "json",
            "schema": {
              "content": {
                "tokenType": "reference",
                "type": "@error",
                "scalarValue": "@error",
                "optional": false
              },
              "notation": "jsight",
              "usedUserTypes": [
                "@error"
              ]
            }
          }
        }
      ],
      "httpMethod": "PUT"
    },
    "http DELETE /pigs/{id}": {
      "id": "http DELETE /pigs/{id}",
      "protocol": "http",
      "path": "/pigs/{id}",
      "tags": [
        "@pigs"
      ],
      "pathVariables": {
        "schema": {
          "content": {
            "tokenType": "object",
            "type": "object",
            "children": [
              {
                "note": "A pig’s id.",
                "key": "id",
                "tokenType": "string",
                "type": "@petId",
                "scalarValue": "PIG-123",
                "rules": [
                  {
                    "key": "type",
                    "tokenType": "string",
                    "scalarValue": "@petId"
                  }
                ],
                "optional": false
              }
            ],
            "optional": false
          },
          "notation": "jsight",
          "usedUserTypes": [
            "@petId"
          ]
        }
      },
      "annotation": "Delete a pig by its id.",
      "responses": [
        {
          "code": "200",
          "annotation": "Success.",
          "body": {
            "format": "binary",
            "schema": {
              "notation": "empty"
            }
          }
        },
        {
          "code": "404",
          "annotation": "Pig not found.",
          "body": {
            "format": "json",
            "schema": {
              "content": {
                "tokenType": "reference",
                "type": "@error",
                "scalarValue": "@error",
                "optional": false
              },
              "notation": "jsight",
              "usedUserTypes": [
                "@error"
              ]
            }
          }
        },
        {
          "code": "409",
          "annotation": "Error.",
          "body": {
            "format": "json",
            "schema": {
              "content": {
                "tokenType": "reference",
                "type": "@error",
                "scalarValue": "@error",
                "optional": false
              },
              "notation": "jsight",
              "usedUserTypes": [
                "@error"
              ]
            }
          }
        }
      ],
      "httpMethod": "DELETE"
    }
  },
  "jsight": "0.3",
  "jdocExchangeVersion": "2.0.0"
}